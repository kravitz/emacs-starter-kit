#+TITLE: Haru.org
#+OPTIONS: H:3 num:nil toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t TeX:t LaTeX:nil skip:nil d:t tags:not-in-toc
#+STARTUP: INDENT

1. Включение красивой расцветки -- цветовой темы zenburn

#+begin_src emacs-lisp :tangle yes
  (require 'zenburn)
  (color-theme-zenburn)
#+end_src

2. Второй язык — русский.

#+begin_src emacs-lisp
  (set-input-method 'russian-computer)
  (inactivate-input-method)
#+end_src

3. *M-Space* — переключение между языками. Две легко доступные,
    вплотную расположенные клавиши — это лучший вариант. Эта
    комбинация пересекается с вызовом «меню окна» в среде GNOME, но в
    гноме я отключил это сочетание за ненадобностью.

#+begin_src emacs-lisp
  (global-set-key (kbd "M-SPC") 'toggle-input-method)
#+end_src

4. *F11* включает полноэкранный режим. Требует наличия программы
   *wmctrl*.

#+begin_src emacs-lisp
  (defun switch-full-screen ()
    (interactive)
    (shell-command "wmctrl -r :ACTIVE: -btoggle,fullscreen"))
  (global-set-key [f11] 'switch-full-screen)
#+end_src

1. *Smart Tab* — говорит само за себя. Код взят с [[http://www.emacswiki.org/emacs/TabCompletion][Emacs Wiki]], цельный
   пакет кода смотреть на [[https://github.com/genehack/smart-tab][Gihub]].

   #+begin_src emacs-lisp
     (setq hippie-expand-try-functions-list
           '(;yas/hippie-try-expand
             try-expand-dabbrev
             try-expand-dabbrev-all-buffers
             try-expand-dabbrev-from-kill
             try-complete-file-name
             try-complete-lisp-symbol))

     (defvar smart-tab-using-hippie-expand t
       "turn this on if you want to use hippie-expand completion.")

     (defun smart-tab (prefix)
       "Needs `transient-mark-mode' to be on. This smart tab is
          minibuffer compliant: it acts as usual in the minibuffer.

          In all other buffers: if PREFIX is \\[universal-argument], calls
          `smart-indent'. Else if point is at the end of a symbol,
          expands it. Else calls `smart-indent'."
       (interactive "P")
       (labels ((smart-tab-must-expand (&optional prefix)
                                       (unless (or (consp prefix)
                                                   mark-active)
                                         (looking-at "\\_>"))))
         (cond ((minibufferp)
                (minibuffer-complete))
               ((smart-tab-must-expand prefix)
                (if smart-tab-using-hippie-expand
                    (hippie-expand prefix)
                  (dabbrev-expand prefix)))
               ((smart-indent)))))

     (defun smart-indent ()
       "Indents region if mark is active, or current line otherwise."
       (interactive)
       (if mark-active
           (indent-region (region-beginning)
                          (region-end))
         (indent-for-tab-command)))
   #+end_src

   #+begin_src emacs-lisp
      (global-set-key (kbd "TAB") 'smart-tab)
   #+end_src

6. Настраиваем haskell-mode
   #+BEGIN_SRC emacs-lisp
     (add-hook 'haskell-mode-hook 'turn-on-haskell-doc-mode)
     (add-hook 'haskell-mode-hook 'turn-on-haskell-indent)
   #+END_SRC

